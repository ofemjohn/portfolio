{"ast":null,"code":"var _jsxFileName = \"/home/jjofem/Desktop/portfolio_website/src/components/Stack.jsx\";\nimport { Typography, Box, styled } from \"@mui/material\";\nimport React from \"react\";\nimport { icons } from \"../constants/icons\";\nimport Icon from \"./Icon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Stack = () => {\n  const CustomBox = styled(Box)(_ref => {\n    let {\n      theme\n    } = _ref;\n    return {\n      maxWidth: \"1300px\",\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      mx: \"auto\",\n      padding: \"2rem\",\n      backgroundColor: \"transparent\",\n      // Use transparent background\n      [theme.breakpoints.down(\"md\")]: {\n        flexDirection: \"column\"\n      }\n    };\n  });\n  const StackBox = styled(Box)(_ref2 => {\n    let {\n      theme\n    } = _ref2;\n    return {\n      marginLeft: \"1.5rem\",\n      flex: 1,\n      display: \"flex\",\n      justifyContent: \"space-around\",\n      flexWrap: \"wrap\",\n      // Wrap icons when necessary\n      margin: \"2rem\",\n      [theme.breakpoints.down(\"md\")]: {\n        marginLeft: \"0\",\n        marginTop: \"3rem\",\n        flexDirection: \"column\"\n      }\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(CustomBox, {\n    sx: {\n      my: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\" // Use h3 for better hierarchy\n        ,\n        sx: {\n          color: \"#ffffff\",\n          textAlign: \"center\",\n          mb: 2\n        },\n        children: \"Versatility is Key\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        sx: {\n          color: \"#ffffff\",\n          textAlign: \"center\",\n          fontWeight: \"bold\"\n        },\n        children: \"Here's what I can help you with.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StackBox, {\n      children: icons.map((icon, i) => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          margin: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: icon.name,\n          src: icon.src\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          sx: {\n            color: \"#ffffff\",\n            mt: 1\n          } // Use white text color\n          ,\n          children: icon.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, icon.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Stack;\nexport default Stack;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stack\");","map":{"version":3,"names":["Typography","Box","styled","React","icons","Icon","Stack","CustomBox","theme","maxWidth","display","justifyContent","alignItems","mx","padding","backgroundColor","breakpoints","down","flexDirection","StackBox","marginLeft","flex","flexWrap","margin","marginTop","my","color","textAlign","mb","fontWeight","map","icon","i","name","src","mt","id"],"sources":["/home/jjofem/Desktop/portfolio_website/src/components/Stack.jsx"],"sourcesContent":["import { Typography, Box, styled } from \"@mui/material\";\nimport React from \"react\";\nimport { icons } from \"../constants/icons\";\nimport Icon from \"./Icon\";\n\nconst Stack = () => {\n  const CustomBox = styled(Box)(({ theme }) => ({\n    maxWidth: \"1300px\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    mx: \"auto\",\n    padding: \"2rem\",\n    backgroundColor: \"transparent\", // Use transparent background\n    [theme.breakpoints.down(\"md\")]: {\n      flexDirection: \"column\",\n    },\n  }));\n\n  const StackBox = styled(Box)(({ theme }) => ({\n    marginLeft: \"1.5rem\",\n    flex: 1,\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    flexWrap: \"wrap\", // Wrap icons when necessary\n    margin: \"2rem\",\n    [theme.breakpoints.down(\"md\")]: {\n      marginLeft: \"0\",\n      marginTop: \"3rem\",\n      flexDirection: \"column\",\n    },\n  }));\n\n  return (\n    <CustomBox sx={{ my: 5 }}>\n      <Box sx={{ flex: 1 }}>\n        <Typography\n          variant=\"h3\" // Use h3 for better hierarchy\n          sx={{ color: \"#ffffff\", textAlign: \"center\", mb: 2 }}\n        >\n          Versatility is Key\n        </Typography>\n        <Typography\n          variant=\"h4\"\n          sx={{ color: \"#ffffff\", textAlign: \"center\", fontWeight: \"bold\" }}\n        >\n          Here's what I can help you with.\n        </Typography>\n      </Box>\n\n      <StackBox>\n        {icons.map((icon, i) => (\n          <Box\n            key={icon.id}\n            sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              margin: \"1rem\",\n            }}\n          >\n            <Icon name={icon.name} src={icon.src} />\n            <Typography\n              variant=\"subtitle2\"\n              sx={{ color: \"#ffffff\", mt: 1 }} // Use white text color\n            >\n              {icon.name}\n            </Typography>\n          </Box>\n        ))}\n      </StackBox>\n    </CustomBox>\n  );\n};\n\nexport default Stack;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}